### FUNCTIONS
=================================

-- Case-1
===================


	
TYPES
	- prebuild 
	- user-build 
	
	
CONS
----------------
- Debugging is difficult
- No Resuablity of code
- Decreases Modularity and Reliablity

	
Develop a calculator software 
		- addition
		- subration
		- multiplication
		- division
		- percentage 
		
		
PROJECT 
================
	PACKAGES 
		- Modules
			- functions 
			- .py files
		- Modules
		
1. calculator.py
	
	#input
	n1 = int(input('enter n1: ')
	
	n2 = int(input('enter n2: ')
	
	#addition functionality
	add = n1 + n2 
	print(f'addition = {add}')
	
	

TASK -1
=================
1. create a file in vscode , write a functions for following functionalities.

		
	addition
	multiplication
	division


2. Printing Even / Odd upto given range
3. Priting prime numbers upto given range
4. Read a textual file and print the data.






## TYPES OF ARGUMENTS 
	- required positional args
	
		def add(a,b):
			return a+b
		add(10,20)
		
	- * args
		def sumLst(*lst):
			pass
			
		sumLst(10,20,340,30)
		
	- ** kwargs
	
	- default args
		
		def factorial(num=5):
			pass
			
		factorial()
		factorial(10)
	
	
	
	1. All functions should handle integer and float data
	
	2. read multiple integers/float, do required operations.
	
	
	
	
	 Develop a simple program  to generate Strong Password
		- Minimum 8 characters
			- one uppercase
			- one lowercase
			- one number
			- one special character
			
###############################################################################


FUNCTIONS 
=====================

- FUNCTIONS INTRO 
- with functions vs without functions
- Pro's of FUNCTIONS
- Syntax:
	declaration
	calling
	
- How to pass inputs to the functions
- Types of Args.
	- * args 
	- ** kwargs 
	- default args
	- required args 
	
- Pass by Reference vs pass by value
- Variables Scope , Returning values from functions 

- NESTED FUNCTIONS , RECURSIVE FUNCTIONS





STRONG PASSWORD GENERATOR 
	- one upper case 
	- one lower case
	- one symbol
	- one number 
	- minimum length : 8
	
	hint:
	import random 
	
	methods:
		randint()
		randrange()
		random()
		choice()
		shuffle()
		sample()
		
		
		
	curl https://reqbin.com/echo -H "Cache-Control: must-revalidate" -H "Pragma: no-cache" -H "Expires: 0"
	curl https://reqbin.com/echo/get/json -H "Accept: application/json"
	
	
	curl -X GET -H "Authorization: Bearer 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" \
	-H "Content-Type: application/json" \ 
	-H "Accepts: application/json" "https://api.openai.com/v1/models"